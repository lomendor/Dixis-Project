version: '3.8'

services:
  # API Gateway
  gateway:
    build: ./gateway
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
    depends_on:
      - auth-service
      - product-service
      - order-service
      - shipping-service

  # Authentication Service
  auth-service:
    build: ./services/auth
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/auth
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis

  # Product Service
  product-service:
    build: ./services/product
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/products
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis

  # Order Service
  order-service:
    build: ./services/order
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/orders
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis

  # Shipping Service
  shipping-service:
    build: ./services/shipping
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/shipping
      - REDIS_URL=redis://redis:6379
      - ACS_API_KEY=${ACS_API_KEY}
      - ELTA_API_KEY=${ELTA_API_KEY}
      - SPEEDEX_API_KEY=${SPEEDEX_API_KEY}
    depends_on:
      - mongodb
      - redis

  # MongoDB with Replica Set
  mongodb:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"

  # MongoDB Config
  mongo-config:
    image: mongo:latest
    depends_on:
      - mongodb
    command: >
      bash -c "sleep 10 && mongosh --host mongodb:27017 --eval '
      rs.initiate({
        _id: \"rs0\",
        members: [{ _id: 0, host: \"mongodb:27017\" }]
      })'"

  # Redis for Caching
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Elasticsearch for Search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # Kibana for Monitoring
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Grafana for Visualization
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  mongodb_data:
  redis_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data: