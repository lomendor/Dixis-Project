import { useState } from 'react';
import { toast } from 'react-hot-toast';
import { Card } from '@/components/ui/Card';
import { Button } from '@/components/ui/Button';
import { Input } from '@/components/ui/Input';
import { TwoFactorSetup as TwoFactorSetupType } from '@/types/auth';

interface TwoFactorSetupProps {
  onComplete: () => void;
  onCancel: () => void;
}

export function TwoFactorSetup({ onComplete, onCancel }: TwoFactorSetupProps) {
  const [setupData, setSetupData] = useState<TwoFactorSetupType | null>(null);
  const [verificationCode, setVerificationCode] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  // Αρχικοποίηση 2FA
  const initializeSetup = async () => {
    try {
      const response = await fetch('/api/auth/2fa/setup', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('token')}`,
        },
      });

      if (!response.ok) throw new Error('Setup failed');

      const data = await response.json();
      setSetupData(data);
    } catch (error) {
      toast.error('Σφάλμα κατά την αρχικοποίηση του 2FA');
    }
  };

  // Επαλήθευση κωδικού
  const verifySetup = async () => {
    if (!setupData) return;
    setIsLoading(true);

    try {
      const response = await fetch('/api/auth/2fa/verify', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('token')}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          secret: setupData.secret,
          token: verificationCode,
        }),
      });

      if (!response.ok) throw new Error('Verification failed');

      toast.success('Το 2FA ενεργοποιήθηκε επιτυχώς');
      onComplete();
    } catch (error) {
      toast.error('Λάθος κωδικός επαλήθευσης');
    } finally {
      setIsLoading(false);
    }
  };

  if (!setupData) {
    return (
      <Card className="p-6 max-w-md mx-auto">
        <h2 className="text-xl font-semibold mb-4">Ενεργοποίηση 2FA</h2>
        <p className="text-gray-600 mb-6">
          Το Two-Factor Authentication προσθέτει ένα επιπλέον επίπεδο ασφαλείας στον λογαριασμό σας.
        </p>
        <div className="flex justify-end space-x-3">
          <Button variant="outline" onClick={onCancel}>
            Ακύρωση
          </Button>
          <Button onClick={initializeSetup}>
            Έναρξη
          </Button>
        </div>
      </Card>
    );
  }

  return (
    <Card className="p-6 max-w-md mx-auto">
      <h2 className="text-xl font-semibold mb-4">Ρύθμιση 2FA</h2>
      
      <div className="space-y-6">
        <div>
          <p className="text-sm text-gray-600 mb-4">
            1. Σκανάρετε το QR code με την εφαρμογή Google Authenticator
          </p>
          <div className="flex justify-center mb-4">
            <img 
              src={setupData.qrCodeUrl} 
              alt="QR Code"
              className="border rounded-lg p-2"
            />
          </div>
        </div>

        <div>
          <p className="text-sm text-gray-600 mb-2">
            2. Εισάγετε τον κωδικό που εμφανίζεται στην εφαρμογή
          </p>
          <Input
            type="text"
            value={verificationCode}
            onChange={(e) => setVerificationCode(e.target.value.replace(/\D/g, '').slice(0, 6))}
            placeholder="000000"
            className="text-center tracking-widest"
            maxLength={6}
          />
        </div>

        <div className="flex justify-end space-x-3">
          <Button variant="outline" onClick={onCancel}>
            Ακύρωση
          </Button>
          <Button 
            onClick={verifySetup}
            disabled={verificationCode.length !== 6 || isLoading}
          >
            {isLoading ? 'Επαλήθευση...' : 'Επαλήθευση'}
          </Button>
        </div>
      </div>
    </Card>
  );
} 